Assignment 2: Wordle

Description: 
The purpose of this assignment is to design, implement, and test a working command line version of the online game, Wordle.

Implementation: 
This section describes the methods to be implemented, their desired behavior, preconditions, input, and output.

- public static String guessHistory(String x)
- Preconditions: x is a lowercase word composed of English alphabetical characters
- Behavior: stores word guesses and returns a partial string showing the progress of the user's guess, should the input word contain characters in the target word
and/or characters in the target word in the correct position 

- Example input: x = maple, word = apple
- Return value: _ Y _ _ Y
- Example input: x = attic, word = algae
- Return value: G _ _ _ _ 

- public static void history()
- Preconditions: none
- Behavior: prints to the console a running log of the past guesses and whether each character in the guess was either 
a) present or 
b) present and correctly placed

-Return value: 
target = gamed (this will not be shown, just written here for explanation purposes)
(guesses)
goose -> G _ _ _ Y
maple -> _ G _ _ Y
tamed -> _ G G G G 


-public static boolean validWord(String x)
-Preconditions: x is a lowercase word composed of English alphabetical characters
-Behavior: returns a boolean value based on the length of the input word compared to the target word, or false if the word doesn't exist in dictionary.txt. 
	If input.length > target.length, return false, else return true
- Example input: "alkjdlkajdsaljkads"
- Return value: false
- Example input: "maple" (target word = crumple)
- Return value: false
- Example input: "tree" (target word = crumple)
- Return value : true